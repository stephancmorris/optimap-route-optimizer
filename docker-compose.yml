version: '3.8'

services:
  # Backend - FastAPI Service
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: optimap-backend
    ports:
      - "8000:8000"
    environment:
      - BACKEND_HOST=0.0.0.0
      - BACKEND_PORT=8000
      - OSRM_BASE_URL=${OSRM_BASE_URL:-http://router.project-osrm.org}
      - SOLVER_TIME_LIMIT_SECONDS=${SOLVER_TIME_LIMIT_SECONDS:-30}
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      # Volume mount for development hot-reload
      - ./backend/app:/app/app:ro
    networks:
      - optimap-network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    restart: unless-stopped

  # Frontend - React Service
  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    container_name: optimap-frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_BASE_URL=http://localhost:8000
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - optimap-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s
    restart: unless-stopped

networks:
  optimap-network:
    driver: bridge
    name: optimap-network

# Optional: Volume for persistent data (if needed in future)
# volumes:
#   optimap-data:
